- wiki_card_dom_id = "js-wiki-card-#{SecureRandom.uuid}"
.wiki-line{ id: wiki_card_dom_id }
  - unless local_assigns[:hide_last_stroked_for]
    - chevron_dropdown = capture do
      = render 'posts/chevron_menu', local_assigns.merge(post: post)
    - dropdown_dom_id = "#{dom_id(post)}__chevron-buttons"

    - last_strocked_for_buttons = capture do
      - if chevron_dropdown.try(:strip).present?
        .post-card__buttons
          %span.bookmark{ class: bookmark_button_post_dom_class(post) }
            = render 'bookmarks/bookmark_button', post: post
          %span.more-menu.dropdown
            %a.cursor-pointer.dropdown-toggle{ id: dropdown_dom_id, "aria-expanded": "false", "aria-haspopup": "true", "data-toggle": "dropdown" }
              %i.fa.fa-ellipsis-v.fa-fw
            %ul.dropdown-menu.pull-right.js-remote-toggle-dropdown-menu{ "aria-labelledby": dropdown_dom_id }
              = chevron_dropdown

    = render 'posts/last_stroked_for', post: post, beholdable: true, buttons: last_strocked_for_buttons

  - wiki_title = capture do
    %h4.wiki-title
      = link_to post.wiki.title, smart_post_url(post), target: '_blank'
      - unless post.wiki.status.active?
        %small
          %span.label.label-default= post.wiki.status_text

  .wiki-line-body-container{ class: ('wiki-line-body-container-inactive' unless post.wiki.active?) }
    - too_short = post.wiki.body_striped_tags.try(:length) < 400
    - if too_short or ['detail', 'preview-detail', 'edit-detail'].include? local_assigns[:mode]
      - if post.wiki.active? and (can?(:update, post.wiki) and 'edit-detail' == local_assigns[:mode])
        = render 'wikis/card_form', local_assigns.merge(wiki_card_dom_id: wiki_card_dom_id)
      - else
        = wiki_title
        .wiki-line-body.wiki-line-body-full.cursor-pointer
          .wiki-body.wiki-preview
            .mce-content-body
              != post.wiki.body
          .wiki-button
            - if !too_short
              = link_to wiki_post_path(post, mode: 'preview', wiki_card_dom_id: wiki_card_dom_id, format: :js), remote: true, class: 'btn btn-default btn-force btn-xs', style: 'margin-right: 4px' do
                접어보기
            - if post.issue.postable?(current_user) and post.wiki.active?
              = link_to wiki_post_path(post, mode: 'edit-detail', wiki_card_dom_id: wiki_card_dom_id, format: :js), remote: true, class: "btn btn-primary btn-force btn-xs", style: 'border-radius: 4px' do
                편집
    - else
      = wiki_title
      .wiki-line-body.cursor-pointer.js-link{ 'data-link-url': wiki_post_path(post, mode: :detail, wiki_card_dom_id: wiki_card_dom_id, format: :js), 'data-link-type': 'remote' }
        .wiki-body.wiki-preview
          .shadow
          .mce-content-body
            != smart_truncate_html(post.wiki.body, length: 1000)
        .shadow
        .wiki-button
          .btn.btn-default.btn-force.btn-xs{ style: 'border-radius: 4px' }
            펼쳐보기
          - if post.issue.postable?(current_user) and post.wiki.active?
            = link_to wiki_post_path(post, mode: 'edit-detail', wiki_card_dom_id: wiki_card_dom_id, format: :js), remote: true, class: "btn btn-primary btn-force btn-xs", style: 'border-radius: 4px;' do
              편집

  .wiki-authors.tooltip-no-wrap
    작성
    - post.wiki.authors.each do |user|
      = link_to smart_user_gallery_path(user) do
        .thumb.img-circle.circle-30{style: "background-image: url(#{user.image.sm.url});", "data-placement" => "top", "data-toggle" => "tooltip", :title => "#{user.nickname}", :type => "auto-button"}
