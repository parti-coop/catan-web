- content_for :content do
  .front-app
    .front-navbar
      .groupmenu.btn.btn-sm.btn-outline-secondary
        %i.fa.fa-bars
        = current_group.title
      = form_with url: '#', method: :get, class: 'searchform', data: { controller: 'front-search', action: 'submit->front-search#submitForm' } do |f|
        - front_search_issue_id = @current_issue&.id
        - front_search_folder_id = @current_folder&.id
        .dropdown
          = f.text_field 'front_search[q]', value: PostSearchableIndex.sanitize_search_key(params.dig(:front_search, :q)), class: 'queryinput fa', placeholder: raw('&#xf002 검색...'), autocomplete: 'off', data: { target: 'front-search.searchQueryField', action: 'input->front-search#updateQueryField focus->front-search#updateQueryField blur->front-search#blurQueryField keydown@document->front-search#upAndDownMenuItem', toggle: 'dropdown-toggle' }
          .dropdown-menu{ 'data-target': 'front-search.menu' }
            - if front_search_folder_id.present?
              .dropdown-item{ data: { 'front-search-url': front_channel_path(issue_id: front_search_issue_id, folder_id: front_search_folder_id), target: 'front-search.menuItem front-search.menuItem', action: 'mouseenter->front-search#mouseEnterMenuItem click->front-search#clickMenuItem' } }
                %span.text{ 'data-target': 'front-search.menuItemText' }
                %span.scope 폴더 내 검색
            - if front_search_issue_id.present?
              .dropdown-item{ data: { 'front-search-url': front_channel_path(issue_id: front_search_issue_id), target: 'front-search.menuItem front-search.menuItem', action: 'mouseenter->front-search#mouseEnterMenuItem click->front-search#clickMenuItem' } }
                %span.text{ 'data-target': 'front-search.menuItemText' }
                %span.scope 채널 내 검색
            .dropdown-item{ data: { 'front-search-url': front_search_path, target: 'front-search.menuItem front-search.menuItem', action: 'mouseenter->front-search#mouseEnterMenuItem click->front-search#clickMenuItem' } }
              %span.text{ 'data-target': 'front-search.menuItemText' }
              %span.scope 그룹 내 검색
    .front-body{ data: { 'controller': 'channel-read-listener group-sidebar-listener', action: 'channel-read->channel-read-listener#consume group-sidebar->group-sidebar-listener#consume' } }
      .group-sidebar
        .channel-listings{ id: "front-app-channel-listings-#{current_group.id}", data: { controller: 'content-loader', 'content-loader-url': front_channel_listings_path(issue_id: @current_issue, folder_id: @current_folder), 'turbolinks-permanent': true, js: 'scroll-persistence', 'scroll-persistence-id': 'front-app-channel-listings', 'scroll-persistence-tag': current_group.id } }
      .front-playground{ data: { controller: 'group-sidebar-emit', 'group-sidebar-emit': { 'channel-id': @current_issue&.id, 'folder-id': @current_folder&.id } } }
        - if content_for?(:playground_header_content)
          .playground-header
            = yield(:playground_header_content)
        .playground-body{ data: { js: 'scroll-persistence', 'scroll-persistence-id': ("front-app-playground-body-#{@scroll_persistence_id_ext}" if @scroll_persistence_id_ext.present?), 'scroll-persistence-tag': @scroll_persistence_tag } }
          = render layout: 'layouts/simplebar' do
            = yield

= render template: 'layouts/bpplication'