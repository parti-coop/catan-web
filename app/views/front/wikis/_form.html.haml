= form_with(model: (current_wiki.new_record? ? [:front, current_wiki.post] : [:wiki, :front, current_wiki.post]), local: false, html: { class: 'post-form -wiki-form', novalidate: true, data: { controller: 'wiki-form editor-form', action: 'ajax:before->wiki-form#submit ajax:success->wiki-form#success', 'editor-form-upload-url': editor_assets_path, 'rule-filesize': '10485760' } }) do |f|
  - if current_wiki.conflict?
    .alert.alert-warning.conflictinfo
      %p
        %strong 저장을 계속하기 전에 검토가 필요합니다.
      %p
        = smart_date_tag(current_wiki.last_history.created_at)
        @#{current_wiki.last_history.user.nickname}님이 위키를 먼저 업데이트했습니다.
        충돌하는 변경 사항은 없는지 검토한 후에 다시 저장해 주세요.
        두 버전의 다른 점은 아래와 같이 표시해 두었습니다.
      %p
        %br
        .conflictlegend
          예시)
          .conflict-deletion
            .content @#{current_wiki.last_history.user.nickname}님이 편집했던 내용
          %i.fa.fa-arrows-h
          .conflict-insertion
            .contents-header__title 내가 편집 중인 내용
  - list_nav_params.each do |key, value|
    - next if value.nil?
    = hidden_field_tag "nav[#{key}]", value
  = f.hidden_field :issue_id
  = f.hidden_field :has_poll, value: false
  = f.hidden_field :has_survey, value: false
  - if current_wiki.persisted?
    = hidden_field_tag :last_wiki_history_id, current_wiki.wiki_histories.last.try(:id)
  - controls = capture do
    - if current_wiki.active?
      .submitbox
        - if current_wiki.persisted?
          = link_to '닫기', front_post_path(current_wiki.post, params.permit(:folder_id)), class: 'btn btn-link btn-sm btn-block-phone', data: { 'turbolinks-action': 'replace', confirm: '정말 저장하지 않고 닫겠습니까?' }
        = f.button '저장하고 닫기', class: 'btn btn-secondary btn-sm btn-block-phone', value: 'after_close', data: { disable_with: "저장 중...", target: 'wiki-form.submitButton' }
        = f.submit '저장하고 계속 편집', class: 'btn btn-primary btn-sm btn-block-phone', data: { disable_with: "저장 중...", target: 'wiki-form.submitButton' }

  - if controls.present? && current_wiki.too_long?
    .controls.-top
      = controls

  = f.fields_for :wiki do |ff|
    .post-wiki
      .body.-full.-edit
        = ff.text_area :title, placeholder: '제목을 넣어주세요...', class: 'form-control form-cotrol-lg formtitle', rows: 1, maxlength: 50, data: { target: 'wiki-form.titleField' }
        = ff.hidden_field :body, data: { target: 'wiki-form.bodyField' }
        .d-none{ data: { target: 'editor-form.source' } }
          != ff.object.body
        - if current_wiki.conflict?
          .d-none{ data: { target: 'editor-form.conflictSource' } }
            != current_wiki.conflicted_body

  - if controls.present?
    .controls
      .control
        = controls

      - if current_issue.folders.any?
        - form_folder = current_wiki.persisted? ? current_wiki.post.folder : current_folder

        .control.form-group.form-inline.folderfield{ data: { controller: 'select-link-remote content-loader', 'content-loader-url': post_folder_field_front_channel_path(current_issue, folder_id: form_folder&.id, form_field_name: "#{f.object_name}[folder_id]") } }

