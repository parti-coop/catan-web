- content_for :playground_header_content do
  = render 'front/playground_header_content/channel_menu/simple', current_issue: @current_issue, current_post: @current_post

- content_for :playground_sidebar_content do
  .supplementary-boxes{ data: { controller: ('fix-bottom-comments' if is_small_screen?) } }
    - unless is_small_screen?
      = render partial: 'front/channels/supplementary_pinned_posts', locals: @supplementary_locals, default_force: 'hide'
    - comments = @updated_comments&.any? ? @updated_comments : @recent_comments
    - if comments&.any?
      .supplementary-box{ data: { controller: "content-toggle", target: 'fix-bottom-comments.item', 'content-toggle': { id: "updated-comments-box-#{@current_post.id}", force: ('show' unless is_small_screen?) } } }
        .header{ class: ('-active-phone' if @updated_comments&.any?), data: { action: 'click->content-toggle#toggle' } }
          .title
            - if @updated_comments&.any?
              이 게시물의 새 댓글
            - else
              이 게시물의 최근 댓글
            &nbsp;
            %i.fa.fa-comment-o.text-muted
          .count
            = comments.size
          .toggler
            %i.fa{ class: ('-hide' if is_small_screen?), data: { target: 'content-toggle.content' } }
        %ul.lines{ class: ('-hide' if is_small_screen?), data: { target: 'content-toggle.content fix-bottom-comments.lines' } }
          - comments.each do |comment|
            %li.updated-comment-line
              - next if comment.blinded?(current_user)
              .body
                .title
                  = link_to "##{dom_id(comment)}", class: 'hover:text-primary', data: { controller: 'smooth-anchor', action: 'click->smooth-anchor#go' } do
                    = comment.body.try(:truncate, 100)
                .footer
                  %span.nickname #{comment.user.nickname}
                  = smart_date_tag(comment.created_at)
    - if @wiki_histories.present?
      .supplementary-box{ data: { controller: "content-toggle", 'content-toggle': { id: "wiki-histories-box-#{@current_post.id}", force: ('show' unless is_small_screen?) } } }
        .header{ data: { action: 'click->content-toggle#toggle' } }
          .title
            위키 이력
          .count
            = @wiki_histories.total_count
          .toggler
            %i.fa{ class: ('-hide' if is_small_screen?), data: { target: 'content-toggle.content' } }
        %ul.lines{ class: ('-hide' if is_small_screen?), data: { target: 'content-toggle.content' } }
          - @wiki_histories.each do |wiki_history|
            %li.updated-comment-line
              .body
                .title
                  = link_to url_for(wiki_history_id: wiki_history.id), class: 'hover:text-primary' do
                    #{static_date_f(wiki_history.created_at)}
                .footer
                  != wiki_history.activity { |user| user_subject_word(user) }

= render 'front/pages/back', back_path: front_channel_path(@current_post.issue), post_id: @current_post.id

.post-box{ data: { controller: 'channel-read-emit' } }
  .post-main{ data: { controller: 'comment-form-new' } }
    = render 'front/posts/show/post_header/title', current_post: @current_post
    .post-content{ data: { controller: 'comment-form-sync' } }
      - if @current_post.wiki.blank?
        .post-meta
          %span.userimage{ data: { controller: 'content-popover', 'content-popover': { url: user_front_members_path(@current_post.user), options: h({ container: '.front-app' }.to_json) } } }
            .userimagebg{ style: "background-image: url(#{@current_post.user.image.sm.url})" }
          .desc
            %span.user{ data: { controller: 'content-popover', 'content-popover': { url: user_front_members_path(@current_post.user), options: h({ container: '.front-app' }.to_json) } } }
              %span.usernickname= @current_post.user.nickname
              %span.memberrole= @current_post.user.current_group_member&.role
            .createdat
              = smart_date_tag @current_post.created_at

        .post-body
          .body
            = post_body_format @current_issue, @current_post.body
        - if @current_post.file_sources_only_image.any?
          .post-file-sources-only-image{ data: { controller: 'photoswipe justified-gallery' } }
            = render layout: 'layouts/photoswipe', locals: { file_sources: @current_post.file_sources_only_image, title: @current_post.title } do |file_source|
              %img{ src: file_source.lg_or_original_url }
        - if @current_post.file_sources_only_doc.any?
          .post-file-sources-only-doc
            - @current_post.file_sources_only_doc.each do |file_source|
              .doc{ data: { controller: 'download', download: { url: file_source.url, 'file-source-id': file_source.id, 'file-name': file_source.name }, action: 'click->download#execute' } }
                .icon
                  %i.fa.fa-floppy-o
                .body
                  %span.name= file_source.name
                  %span.size= number_to_human_size(file_source.file_size)
                .button
                  .btn.btn-sm.btn-secondary 다운로드
        - if @current_post.link_source.present?
          - if @current_post.video_source?
            .post-video-source
              .content
                = video_embed_code(@current_post, 'player')
              .site
                %a{ href: @current_post.link_source.url, target: '_blank' }
                  = @current_post.link_source.site_name.try(:upcase)
                  원글보기
                  %i.fa.fa-external-link
          - else
            %a.post-link-source{ href: @current_post.link_source.url, target: '_blank' }
              - if @current_post.link_source.has_image?
                .thumbnail{ style: "background-image: url(#{@current_post.link_source.image.md.url});" }
              .content
                .title= @current_post.link_source.title_or_url
                .body= excerpt(@current_post.link_source.body, length: (is_small_screen? ? 45 : 130))
                .site
                  = @current_post.link_source.site_name.try(:upcase)
                  원글보기

                  %i.fa.fa-external-link
        - if @current_post.poll.present?
          = render 'front/posts/show/poll', poll: @current_post.poll
        - if @current_post.survey.present?
          = render 'front/posts/show/survey', survey: @current_post.survey
        - if @current_post.announcement.present?
          = render 'front/posts/show/announcement', announcement: @current_post.announcement
      - else
        -# WIKI
        .post-wiki
          = render 'front/wikis/card', current_wiki: @current_post.wiki, current_wiki_history:  @current_wiki_history

      .reactions
        .reaction
          - if user_signed_in?
            %a.link{ href: '#', data: { action: 'click->comment-form-new#open' }, class: ('-active' if @current_post.commented_by_me?) } 댓글달기
          - else
            %a.link{ href: '#', data: { action: 'sign-in-launcher#modal' } } 댓글달기

          - if @current_post.comments_count > 0
            %a.comments{ class: ('-active' if @current_post.commented_by_me?) }
              %i.fa{ class: (@current_post.commented_by_me? ? 'fa-comment' : 'fa-comment-o') }
              = trim_count(@current_post.comments_count)
        = render 'front/posts/show/upvotings/reaction', current_upvotable: @current_post

      .comments{ data: { controller: 'comment-hash', target: 'comment-form-sync.commentsContent' } }
        = render 'front/posts/show/comments', current_issue: @current_issue, current_post: @current_post




