.message-line.clearfix{ class: [('-unread' if message.unread?), (class_name if local_assigns[:class_name].present?)], data: { controller: 'content-replacement' } }
  .box.media.media-overflow-visible
    .rocket
      - if local_assigns[:mention_only_page]
        .userimagebg{style: "background-image: url(#{message.sender.image.sm.url}); margin-top: 2px;"}
      - else
        - case message.messagable
        - when Announcement
          %i.fa.fa-bullhorn.fa-fw
        - when Comment
          - comment = message.messagable
          - if comment.mentioned?(message.user)
            %i.fa.fa-at.fa-fw
          - else
            %i.fa.fa-comment-o.fa-fw
        - when Issue
          %i.fa.fa-hashtag.fa-fw
        - when Member, MemberRequest
          %i.fa.fa-user-o.fa-fw
        - when Post
          - post = message.messagable
          - if post.mentioned?(message.user)
            %i.fa.fa-at.fa-fw
          - else
            %i.fa.fa-file-text-o.fa-fw
        - when Upvote
          %i.fa.fa-heart-o.fa-fw
        - else
          %i.fa.fa-bell-o.fa-fw
    .media-body
      .message__header
        - if local_assigns[:mention_only_page]
          .message__mentioner
            %strong
              #{message.sender.nickname}
      .message__body{ data: { controller: 'message--read-and-go list-nav-kickoff', 'message--read-and-go-url': read_front_message_path(message), action: ('click->list-nav-kickoff#store' if local_assigns[:list_navable]), 'list-nav-kickoff-post-id': message.post&.id } }
        = render customize_partial_path(message.messagable, ->(model) { "front/messages/message/#{model.class.model_name.singular}" }), local_assigns.merge(message: message)

    - toggle_read_url_params = local_assigns.slice(:list_navable, :mention_only_page)
    - toggle_read_url = if message.unread?
      - read_front_message_path(message, toggle_read_url_params)
    - else
      - unread_front_message_path(message, toggle_read_url_params)

    = link_to toggle_read_url, method: :patch, remote: true, data: { 'disable-width': '..', target: 'content-replacement.link', 'message--dropdown-keep-open': true}, class: "message__check", title: "#{ message.unread? ? '읽음으로 표시하기' : '읽지 않음으로 표시하기' }" do
      %span.fa-stack.fa-fw
        - if message.unread?
          %i.fa.fa-fw.fa-circle.fa-stack-1x.text-secondary
          %i.fa.fa-fw.fa-circle-thin.fa-stack-1x
        - else
          %i.fa.fa-fw.fa-circle-thin.fa-stack-1x
          %i.fa.fa-fw.fa-check.fa-stack-1x{ style: 'font-size: 60%' }
