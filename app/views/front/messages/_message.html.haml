.message-line.clearfix{ class: [('-unread' if message.unread?), (class_name if local_assigns[:class_name].present?)], data: { controller: 'content-replacement' } }
  .media.media-overflow-visible
    .userimage
      .userimagebg{style: "background-image: url(#{message.sender.image.sm.url}); margin-top: 2px;"}
    .media-body
      .message__header
        - if local_assigns[:mention_only_page]
          .message__mentioner
            %strong
              #{message.sender.nickname}
        .message__parti
          - if local_assigns[:mention_only_page]
            &middot;
          - if message.issue.present?
            = link_to smart_issue_home_url(message.issue) do
              = issue_tag(message.issue)
          - elsif message.group.present?
            = link_to message.group.title_basic_format, smart_group_url(message.group)
        .message__date.date-wrapper
          &middot;
          = smart_date_tag message.created_at
      .message__body{ data: { controller: 'message-read-and-go', 'message-read-and-go-url': read_front_message_path(message) } }
        = render customize_partial_path(message.messagable, ->(model) { "front/messages/#{model.class.model_name.singular}" }), local_assigns.merge(message: message)
    - toggle_read_url_params = local_assigns.slice(:list_nav_params, :mention_only_page)
    - toggle_read_url = if message.unread?
      - read_front_message_path(message, toggle_read_url_params)
    - else
      - unread_front_message_path(message, toggle_read_url_params)

    = link_to toggle_read_url, method: :patch, remote: true, data: { 'disable-width': '..', target: 'content-replacement.link', 'message-dropdown-keep-open': true}, class: "message__check" do
      %span.fa-stack.fa-fw
        %i.fa.fa-fw.fa-circle-thin.fa-stack-1x
        - unless message.unread?
          %i.fa.fa-fw.fa-check.fa-stack-1x{ style: 'font-size: 60%' }
