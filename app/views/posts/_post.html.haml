- comment_style = local_assigns[:mode] || 'in-list'
.post-card-with-comments{class: "post-card-with-comments--#{comment_style} #{dom_id(post)} #{ 'post-card-with-comments--hidden-issue' unless local_assigns[:show_issue]} #{removable_with_post_dom_class(post) if local_assigns[:mode] == 'list'}", data: { 'parti-comment-style': comment_style }}
  .post-card-with-comments__content
    .post-card-with-comments__header{class: "#{'hide' unless local_assigns[:show_issue]}"}
      .media
        - if local_assigns[:show_issue]
          .media-left
            = link_to issue_home_path_or_url(post.issue), target: issue_link_target_name(post.issue) do
              .issue-logo{style: "background-image: url(#{post.issue.logo.xs.url});"}
        .media-body
          - if local_assigns[:show_issue]
            = link_to issue_home_path_or_url(post.issue), target: issue_link_target_name(post.issue) do
              %span.issue-title= post.issue.title
              - if post.issue.on_group?
                %i.fa.fa-angle-left
                %span.issue-group
                  = post.issue.group.name
        - if local_assigns[:mode] == 'modal'
          .media-right( style='vertical-align: middle;' )
            %button(type="button" class="close" data-dismiss="modal") &times;

    .post-card-with-comments__post
      .post-card-with-comments__buttons.pull-right
        - if can? :update, post
          = link_to [:edit, post] do
            %i.fa.fa-pencil
            %span.hidden-xs
              수정
        - if can? :destroy, post
          = link_to post_path(post, mode: local_assigns[:mode]), method: :delete, remote: (local_assigns[:mode] != 'detail'), data: { confirm: '정말 삭제하시겠습니까?' } do
            %i.fa.fa-trash
            %span.hidden-xs
              삭제
        - if local_assigns[:additional_buttons_partial].present?
          = render additional_buttons_partial, local_assigns
      .post-info
        = render 'users/post_byline', post: post

      = render 'posts/post_line', local_assigns.merge(show_issue: false)


    - share_partial = capture do
      - data = {action: 'parti-share', 'share-url': polymorphic_url(post, subdomain: post.issue.group_slug), 'share-text': "#{post.specific_desc_striped_tags} | #{post.issue.group.try(:share_site_title) || "빠띠"}", 'share-image': "#{post.meta_tag_image}" }
      - map = { facebook: data }
      - map.update twitter: data, 'kakao-link': data, 'kakao-story': data
      = render 'application/share', map: map
    .post-card-with-comments__footer.clearfix
      %span.post-card-with-comments__footer__upvote
        .post-upvote
          = render 'upvotes/upvote', upvotable: post

      - if user_signed_in?
        %span.post-card-with-comments__footer__link-to-modal{data: { action: 'parti-focus', 'focus-target': new_comment_form_body_input_dom_selector(post)}}
          댓글달기
      - else
        %span.post-card-with-comments__footer__link-to-login{data: { toggle: 'parti-login-overlay', label: '댓글달기' }}
          댓글달기
      %span.post-card-with-comments__footer__share-modal{"data-url": "#share-partial-#{dom_id(post)}", "data-action": "parti-popover", "data-placement": "top"}
        공유하기
      %span.post-card-with-comments__footer__upvote-count
        = render 'upvotes/upvote_count', upvotable: post
      .hidden
        .share-partial{id: "share-partial-#{dom_id(post)}"}
          = share_partial
    .post-reaction{class: "#{dom_id(post)}-post-reaction"}
      = render 'posts/comments', local_assigns


