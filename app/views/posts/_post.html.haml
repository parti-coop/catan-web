- local_assigns[:show_issue] = true if local_assigns[:in_modal]
- comment_style = local_assigns[:in_modal] ? 'in-modal' : 'in-list'
.post-card-with-comments{class: "post-card-with-comments--#{comment_style} #{dom_id(post)} #{ 'post-card-with-comments--hidden-issue' unless local_assigns[:show_issue]} post-card-with-comments--#{post.specific.class.model_name.singular}", data: { 'parti-comment-style': comment_style }}
  .post-card-with-comments__content
    .post-card-with-comments__header
      .media
        - if local_assigns[:show_issue]
          .media-left
            = link_to issue_home_path_or_url(post.issue), target: issue_link_target_name(post.issue) do
              .issue-logo{style: "background-image: url(#{post.issue.logo.xs.url});"}
        .media-body
          - if local_assigns[:show_issue]
            = link_to issue_home_path_or_url(post.issue), target: issue_link_target_name(post.issue) do
              %span.issue-group
                - if post.issue.on_group?
                  = post.issue.group.name
                  %i.fa.fa-angle-right
              %span.issue-title= post.issue.title
            %br
          = link_to send("issue_#{post.specific.class.model_name.plural}_path", post.issue), class: 'post-type' do
            #{post.specific.class.model_name.human}
          - modal_data = local_assigns[:in_modal] ? {} : { toggle: "parti-post-modal", target: '#post-modal', url: polymorphic_url(post.specific) }
          %span.date-wrapper{data: modal_data}= date_f post.created_at
        - if local_assigns[:in_modal]
          .media-right
            %button.post-modal__btn(type="button" class="close" data-dismiss="modal" aria-label="Close")
              = image_tag 'icon_close.png'

    .post-card-with-comments__post
      = render customize_partial_path(post.specific, ->(model) { "#{model.class.model_name.plural}/#{model.class.model_name.singular}_line" }), local_assigns.merge(show_issue: false)
    - if local_assigns[:in_modal]
      .post-card-with-comments__buttons
        - if can? :update, post.specific
          = link_to [:edit, post.specific] do
            %i.fa.fa-pencil
            수정
        - if can? :destroy, post.specific
          = link_to post.specific, method: :delete, data: { confirm: '정말 삭제하시겠습니까?' } do
            %i.fa.fa-trash
            삭제
        - if local_assigns[:additional_buttons_partial].present?
          = render additional_buttons_partial, local_assigns
    .post-card-with-comments__comments
      - if post.comments_count > 0
        .post-card-with-comments__count
          = render 'comments/list_header', local_assigns.merge(post: post)
        - if post.comments.any?
          - (local_assigns[:in_modal] ? post.comments : post.latest_comments).each do |comment|
            = render 'comments/comment_line', local_assigns.merge(comment: comment, mention_form_control: '#new_comment #comment_body')
  - share_partial = capture do
    - data = {action: 'parti-share', 'share-url': polymorphic_url(post.specific, subdomain: post.issue.group_slug), 'share-text': "#{post.specific_desc} | #{post.issue.group.try(:share_site_title) || "빠띠"}" }
    - map = { facebook: data }
    - map.update twitter: data, 'kakao-link': data, 'kakao-story': data
    = render 'application/share', map: map
  .post-card-with-comments__footer
    - unless local_assigns[:in_modal]
      - if user_signed_in?
        - mention_options_data = { 'mention-nickname': '', 'mention-form-control': '#new_comment #comment_body' }
        - mention_data = mention_options_data.merge(toggle: "parti-post-modal", target: '#post-modal', url: polymorphic_url(post.specific))
        %span.post-card-with-comments__footer__link-to-modal{ data: mention_data }
          %i.fa.fa-commenting-o
          수다작성
      - else
        %span.post-card-with-comments__footer__link-to-login{data: { toggle: 'parti-login-overlay', label: '수다작성' }}
          %i.fa.fa-commenting-o
          수다작성
    %span.post-card-with-comments__footer__share-modal{"data-url": "#share-partial-#{dom_id(post)}", "data-action": "parti-popover", "data-placement": "top"}
      %i.fa.fa-share-alt
      공유하기
    .hidden
      .share-partial{id: "share-partial-#{dom_id(post)}"}
        = share_partial
  - if local_assigns[:in_modal]
    .post-card-with-comments__comment-form
      - if user_signed_in?
        %a.anchor#comment-form
        .clearfix
          = form_for [post, Comment.new], remote: true, class: 'comment-form', data: {action: 'parti-form-validation', 'submit-form-control': 'form#new_comment input[type=submit]' } do |f|
            = hidden_field_tag :container, ".#{dom_id(post)}[data-parti-comment-style='in-modal'] .post-card-with-comments__comments"
            = hidden_field_tag :count_label, ".#{dom_id(post)}[data-parti-comment-style='in-modal'] .post-card-with-comments__count"
            = hidden_field_tag :body_control, ".#{dom_id(post)}[data-parti-comment-style='in-modal'] form#new_comment #comment_body"
            .thumb.img-circle.comment-form__img{style: "background-image: url(#{current_user.image.sm.url});"}
            .comment-form__area
              = f.text_area :body, class: 'form-control', placeholder: '수다를 입력하세요', data: { 'rule-required': true }
            = f.submit '게시', class: 'btn btn-primary comment-form__btn', data: { disable_with: "게시 중..." }
      - else
        .post-card-with-comments__footer--need-to-login
          %span.text-muted 가볍게 수다를 작성해 보세요.
          = link_to '#', data: { toggle: 'parti-login-overlay', label: '수다작성' }, class: 'btn btn-default btn-new-comment'  do
            %i.fa.fa-comment-o
            게시
