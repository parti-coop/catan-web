.post-card__post.clearfix.cursor-pointer{ id: pinned_post_dom_id(post), class: "#{('js-posts-pinned-and-read collapse' if local_assigns[:collapse])} #{'need-to-read' if post.need_to_read?(current_user)}", 'data-action': "parti-link", 'data-url': smart_post_url(post) }
  .read-mark.js-read-mark{ class: ('read-mark--need-to-read' if post.need_to_read?(current_user)) }
  .desc{ class: ('desc_without_issue' unless local_assigns[:show_issue]) }
    - if local_assigns[:show_issue]
      .issue-meta.issue-meta-header{ class: ('issue-meta-pinnable' if can?(:pin, post)) }
        = link_to smart_issue_home_url(post.issue) do
          %span.issue-and-group
            - if post.issue.group != host_group
              %span.issue-group
                = post.issue.group.title_basic_format
                = meta_icons(post.issue.group)
              \/
            %span.issue-title
              = post.issue.title
              = meta_icons(post.issue)


    .body<>
      = link_to smart_post_url(post), 'aria-label': only_mobile_app(request, "post-pinned") do
        = post.specific_desc_striped_tags(120)

    .issue-meta.issue-meta-footer
      = link_to "@#{post.user.nickname}", post.user
      &nbsp;
      = link_to smart_post_url(post) do
        - created_at = local_assigns[:post].try(:created_at)
        %span.date= created_at.nil? ? '지금' : date_f(created_at)

      - if can? :pin, post
        - action_label = capture do
          %span.action-btn{ class: ('action-btn-fixed' if post.careful_pin_by?(current_user)) }
            &nbsp;
            = link_to [:unpin, post], method: :delete, remote: true, data: { disable_with: '처리 중...', confirm: '이 공지를 내리시겠습니까?' }, class: "#{post_pin_button_dom_class(post)} secondary" do
              공지에서 내립니다
        = action_label
      - if post.need_to_read?(current_user)
        - action_label = capture do
          %span.action-btn.js-read-action-btn
            &nbsp;
            = link_to [:read, post], method: :put, remote: true, data: { disable_with: '처리 중...' }, class: "#{read_button_dom_class(post)} primary", 'data-completed-with': '확인 표시 완료 <i class="fa fa-check"/>' do
              확인 상태로 표시합니다
        = action_label

  - pin_buttons = capture do
    - if can? :pin, post
      %li
        = render 'posts/pin_buttons', post: post
      - if post.pinned?
        %li
          = link_to [:readers, post], target: '_blank' do
            확인한 가입멤버 보기 (#{post.readers_count})
        %li
          = link_to [:unreaders, post], target: '_blank' do
            확인하지 않은 가입멤버 보기
    - if post.need_to_read?(current_user)
      - if can? :pin, post
        %li.divider
        %li
          = link_to [:read, post], method: :put, remote: true, data: { disable_with: '처리 중...' }, class: read_button_dom_class(post), 'data-completed-with': '확인 표시 완료 <i class="fa fa-check"/>' do
            확인 상태로 표시하기

  - if pin_buttons.try(:strip).present?
    - dropdown_dom_id = "#{dom_id(post)}__pinned_chevron-buttons"
    .pin-buttons
      %button.btn.btn-link.btn-sm.dropdown-toggle{ id: dropdown_dom_id, "aria-expanded": "false", "aria-haspopup": "true", "data-toggle": "dropdown" }
        %i.fa.fa-chevron-down
      %ul.dropdown-menu.pull-right{ "aria-labelledby": dropdown_dom_id }
        = pin_buttons
