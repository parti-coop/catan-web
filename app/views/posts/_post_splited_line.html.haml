- card_attr = { 'data-link-url': smart_post_url(post, assigns: to_json_primitive_only(show_issue: local_assigns[:show_issue], show_group: local_assigns[:show_group], mode: 'list', full_post_body: 'true'), dom_id: splited_post_dom_id  , format: 'js'), 'data-link-type': 'remote', 'data-link-parti-remote-loading': "##{splited_post_dom_id}", 'data-post-link-selector-active-class': 'selected' }

.post-card.post-card-line.post-card-splited-line.js-post-link-selector.js-link{ card_attr }
  .post-card__post.clearfix.cursor-pointer
    .lead-icon
      - if post.wiki.present?
        %i.fa.fa-file-word-o
      - else
        = link_to smart_user_gallery_url(post.user) do
          .thumb.user-image.img-circle{ style: "background-image: url(#{post.user.image.sm.url})" }
        - if post.poll.present?
          - sub_icon_class = "fa-fire"
          - sub_icon_active = post.poll.open?
        - elsif post.survey.present?
          - sub_icon_class = 'fa-list-ul'
          - sub_icon_active = post.survey.open?
        - elsif post.event.present?
          - sub_icon_class = 'fa-calendar'
          - sub_icon_active = true
        - elsif post.decision.present?
          - sub_icon_class = 'fa-rocket'
          - sub_icon_active = true

        - if sub_icon_class.present?
          - if post.decision.present? and sub_icon_class != 'fa-rocket'
            .sub-icon.fa-stack.before
              %i.fa.fa-circle.fa-stack-2x{ class: ('active' if sub_icon_active) }
              %i.fa.fa-stack-1x.fa-inverse{ class: sub_icon_class }
            .sub-icon.fa-stack.after
              %i.fa.fa-circle.fa-stack-2x.active
              %i.fa.fa-stack-1x.fa-inverse.fa-rocket
          - else
            .sub-icon.fa-stack
              %i.fa.fa-circle.fa-stack-2x{ class: ('active' if sub_icon_active) }
              %i.fa.fa-stack-1x.fa-inverse{ class: sub_icon_class }

    .desc
      .body<>
        - if post.poll.present?
          "#{post.poll.title}"
        - else
          = post.specific_desc_striped_tags(120)

      .issue-meta.issue-meta-footer
        - if post.wiki.present?
          %span.text-nowrap{ style: 'margin-right: 1em' }
            - wiki_authors = post.wiki.authors
            = wiki_authors[0..2].map(&:nickname).join('<span>&middot;</span>').html_safe
            - if wiki_authors.length > 3
              %span<>
                +#{wiki_authors.length - 3}
        - else
          = link_to smart_user_gallery_url(post.user), class: 'text-nowrap', style: 'margin-right: 1em' do
            = post.user.nickname

        - created_at = local_assigns[:post].try(:created_at)
        %span.date.text-nowrap{ style: 'margin-right: 1em' }= created_at.nil? ? '지금' : date_f(created_at)


        - folder_doms = capture do
          - if post.folder.present?
            - if local_assigns[:show_issue]
              \/
            %span{ style: 'max-width: 120px; display: inline-block; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; vertical-align: bottom;' }
              = render 'posts/post_card_folder', post: post

        - if local_assigns[:show_issue]
          %span.text-nowrap
            - if !post.issue.host_group?(current_group) or local_assigns[:show_group]
              = link_to smart_group_url(post.issue.group), class: 'header-separator-item' do
                %span.issue-group
                  = post.issue.group.title_short_format
                  = meta_icons(post.issue.group)
              \/
            = link_to smart_issue_home_url(post.issue), class: 'header-separator-item', title: post.issue.title  do
              %span.issue-title{ style: 'max-width: 120px; display: inline-block; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; vertical-align: bottom;' }
                = post.issue.title
                = meta_icons(post.issue)
            = folder_doms
        - else  local_assigns[:show_issue]
          %span.text-nowrap
            = folder_doms
    .comments-count
      - if post.comments_count > 0
        %i.fa.fa-comment-o
        #{post.comments_count}

