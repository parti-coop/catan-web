- button_groups = []
- if post.wiki.present?
  - if post.wiki.purgeable?
    - button_groups << capture do
      %li
        = link_to '위키 이력보기', histories_wiki_post_path(post)
  - if can? :update, post.wiki
    - button_groups << capture do
      - if post.wiki.activatable?
        %li
          = link_to '다시 위키 게시하기', activate_wiki_post_path(post), method: :patch
      - if post.wiki.inactivatable?
        %li
          = link_to '위키 아카이브하기', inactivate_wiki_post_path(post), method: :patch
      - if post.wiki.purgeable?
        %li
          = link_to '위키 지우기', purge_wiki_post_path(post), method: :patch
      - if user_signed_in? and !can?(:move, post)
        - if post.private_blocked?(post.user)
          %li
            %a{ data: { trigger: 'hover', action: 'parti-popover', content: "위키를 작성한 @#{post.user.nickname}님이 이 빠띠를 탈퇴하였거나 접근할 수 없습니다.", style: 'inverse', target: 'messenger-balloon'} }
              %span.text-muted
                이동 불가
              %i.fa.fa-ban
        - else
          %li
            %a.cursor-pointer.js-mention{ href: '#', data: { mention_form_control: new_comment_form_body_input_dom_selector(post), 'mention-nickname': post.user.nickname, 'mention-text': "게시글 이동을 부탁드려요." } }<> 이동요청
- button_groups << capture do
  - if can?(:update, post) and post.wiki.blank?
    %li
      = link_to [:edit, post] do
        수정
  - if can? :destroy, post
    %li
      = link_to post_path(post), method: :delete, remote: (local_assigns[:mode] != 'detail'), data: { confirm: '정말 삭제하시겠습니까?' } do
        삭제
  - if can?(:move, post)
    %li
      = link_to [:move_form, post] do
        이동

- button_groups << capture do
  - if can? :pin, post
    %li
      = render 'posts/pin_buttons', post: post
    - if post.pinned?
      %li
        = link_to [:readers, post], target: '_blank' do
          확인한 가입멤버 보기 (#{post.readers_count})
      %li
        = link_to [:unreaders, post], target: '_blank' do
          확인하지 않은 가입멤버 보기

- button_groups << capture do
  - additional_buttons = capture do
    - if local_assigns[:additional_buttons_partial].present?
      = render additional_buttons_partial, local_assigns
  - if additional_buttons.try(:strip).present?
    %li= additional_buttons

- button_groups.reject { |button_group| button_group.blank? }.each_with_index do |button_group, index|
  - if index != 0
    %li.divider
  = button_group
