- note = note_line
- post = note.acting_as
- issue = post.issue
- modal_data = local_assigns[:in_modal] ? {} : {toggle: 'parti-post-modal', target: '#post-modal', 'url': note_path(note)}
- mention_options_data = { 'mention-nickname': post.user.nickname, 'mention-form-control': '#new_comment #comment_body' }
- mention_data = local_assigns[:in_modal] ? mention_options_data.merge(action: 'parti-mention') : mention_options_data.merge(modal_data)
.note-line.post-line[post]
  - if local_assigns[:show_issue]
    .note-line__issue.post-line__issue
      = link_to issue_home_path_or_url(issue) do
        = image_tag issue.logo.xs.url
        %span.text-primary= issue.title
      %span.post-line__issue__post-type
        &middot;
        #{Note.model_name.human}
  .media
    .media-body
      .note-body{data: modal_data}
        = smart_format(note.body)

      .note-info
        = link_to user_gallery_path(note.user) do
          .thumb.user-image.img-circle{style: "background-image: url(#{note.user.image.sm.url});"}
          %span.nickname= note.user.nickname
        - if note.user.mentionable?(current_user)
          %a.comment__mention{ href: '#', data: mention_data }
            %i.fa.fa-reply

      - unless local_assigns[:hide_upvote]
        .note-comment-upvote.visible-xs
          = render 'upvotes/upvote', upvotable: post

    - unless local_assigns[:hide_upvote]
      .media-right.hidden-xs
        = render 'upvotes/upvote', upvotable: post
