- Post.where(folder: parent_folder).order_by_folder_seq.includes(:issue).each do |post|
  - is_empty = false
  .folder-item.child-item.only-clickable.js-folder-item.js-draggable-slug-folder-item.js-draggable-slug-folder-draggable{ class: "#{'js-folder-item-managable' if can?(:manage_folders, issue)} #{('active' if latest_active_folder_item?(post))}", 'data-url': smart_post_url(post), 'data-folder-item-type': 'post', 'data-draggable-slug-folder-item-type': 'post', 'data-folder-item-id': post.id, 'data-draggable-slug-folder-json-params': h({ item_type: 'Post', item_id: post.id }.to_json), 'data-detach-post-url': detach_post_folder_url(parent_folder, post_id: post.id) }
    .folder-item-title-container
      %span.folder-item-icon
        - if post.wiki.present?
          %i.fa.fa-fw.fa-file-word-o
        - else
          %i.fa.fa-fw.fa-file-o
      %span.folder-item-title
        .folder-item-title-content.js-folder-item-renamable-content{ class: folded_post_dom_class(post), 'data-value': post.specific_desc_striped_tags(100) }
          = post.specific_desc_striped_tags(100)
        .folder-item-title-rename-form.js-folder-item-rename-form.collapse
          = form_for [:update_title, post], remote: true, html: {class: 'form-inline'} do |f|
            = f.text_field :title, value: post.specific_desc_striped_tags(100), maxlength: 100, size: false, class: 'folder-item-title-input js-folder-item-rename-text-field'
    .folder-item-updated-at
      .updated-at= date_f(post.last_stroked_at)
